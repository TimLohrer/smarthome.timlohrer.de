// device_1
const device_1_component = (device) => { return `<div class="device-1-switch" id="device-${device.id}"><div class="device-1-switch-name-wrapper">        <h3 class="device-1-switch-name" id="device-${device.id}-name">${device.name.length <= 20 ? device.name : device.name.substring(0, 20 - 3) + '...'}</h5>        <img class="device-name-${device.type >= 0 ? 'ikea' : 'shelly'}" src="../../../assets/${device.type >= 0 ? 'ikea' : 'shelly'}-logo.png" alt="${device.type >= 0 ? 'IKEA' : 'SHELLY'} DEVICE"></div><button class="device-1-switch-relay ${device.relayValue ? 'on' : 'off'}" id="device-${device.id}-relay" value="${device.relayValue}" onclick="operate1('${device.id}', { value: document.getElementById('device-${device.id}-relay').value == 'true' ? false : true })">${device.relayValue ? 'Turn Off' : 'Turn On'}</button></div>` };
// device_2_switch
const device_2_switch_component = (device) => { return `<div class="device-2-switch" id="device-${device.id}"><div class="device-2-switch-name-wrapper">        <h3 class="device-2-switch-name" id="device-${device.id}-name">${device.name.length <= 20 ? device.name : device.name.substring(0, 20 - 3) + '...'}</h5>        <img class="device-name-${device.type >= 0 ? 'ikea' : 'shelly'}" src="../../../assets/${device.type >= 0 ? 'ikea' : 'shelly'}-logo.png" alt="${device.type >= 0 ? 'IKEA' : 'SHELLY'} DEVICE"></div><div class="device-2-switch-relay-name-wrapper">        <p class="device-2-switch-relay-name">${device.switch0.name}</p>        <p class="device-2-switch-relay-name">${device.switch1.name}</p></div><div class="device-2-switch-relay-wrapper">        <button class="device-2-switch-relay ${device.relay0Value ? 'on' : 'off'}" id="device-${device.id}-relay0" value="${device.relay0Value}" onclick="operate2Switch('${device.id}', { relay: 'switch0', value: document.getElementById('device-${device.id}-relay0').value == 'true' ? false : true })">${device.relay0Value ? 'Turn Off' : 'Turn On'}</button>        <button class="device-2-switch-relay ${device.relay1Value ? 'on' : 'off'}" id="device-${device.id}-relay1" value="${device.relay1Value}" onclick="operate2Switch('${device.id}', { relay: 'switch1', value: document.getElementById('device-${device.id}-relay1').value == 'true' ? false : true })">${device.relay1Value ? 'Turn Off' : 'Turn On'}</button></div></div>` };
// device_light
const device_light_component = (device,user) => { return `<div class="device-light" id="device-${device.instanceId}"><div class="device-light-name-wrapper">        <h3 class="device-light-name" id="device-${device.instanceId}-name">${device.name.length == 0 ? device.deviceInfo.modelNumber.length > 0 ? device.deviceInfo.modelNumber : 'Unknown Remote' : device.name.length <= 20 ? device.name : device.name.substring(0, 20 - 3) + '...'}</h5>        <img class="device-light-name-edit" onclick="updateLight('${device.instanceId}')" src="../../../assets/edit.png" alt="EDIT" ${user.editingMode ? '' : 'hidden'}>        <img class="device-name-${device.type >= 0 ? 'ikea' : 'shelly'}" src="../../../assets/${device.type >= 0 ? 'ikea' : 'shelly'}-logo.png" alt="${device.type >= 0 ? 'IKEA' : 'SHELLY'} DEVICE"></div><h5 class="device-light-alive ${device.alive ? 'active' : 'inactive'}" id="device-${device.instanceId}-alive">${device.alive ? 'Active' : 'Inactive'}</h6><button class="device-light-onOff ${device.alive && device.lightList[0].onOff ? 'on' : 'off'}" id="device-${device.instanceId}-onOff" value="${device.alive && device.lightList[0].onOff}" onclick="operateLight('${device.instanceId}', { onOff: document.getElementById('device-${device.instanceId}-onOff').getAttribute('value') == 'true' ? false : true })" ${device.alive ? '' : 'disabled'}>${device.alive && device.lightList[0].onOff ? 'Turn Off' : 'Turn On'}</button><div class="device-light-dimmer-wrapper">        <input class="device-light-dimmer" id="device-${device.instanceId}-dimmer" type="range" oninput="document.getElementById('device-${device.instanceId}-dimmer-label').innerHTML = value + '%'" onchange="operateLight('${device.instanceId}', { onOff: true, dimmer: value })" min="0" max="100" value="${device.lightList[0].dimmer}" ${device.alive && device.lightList[0].onOff ? '' : 'disabled'}>        <label class="device-light-dimmer-label${device.alive && device.lightList[0].onOff ? '' : ' disabled'}" id="device-${device.instanceId}-dimmer-label" for="device-${device.instanceId}-dimmer">${device.lightList[0].dimmer}%</label></div><div class="device-light-color-wrapper${device.alive && device.lightList[0].onOff ? '' : ' disabled'}" id="device-${device.instanceId}-color-wrapper">        <button class="device-light-color cold ${device.lightList[0].colorTemperature == 0 ? 'active' : 'inactive'}" id="device-${device.instanceId}-color-cold" onclick="operateLight('${device.instanceId}', { onOff: true, color: 'cold' })" ${device.alive && device.lightList[0].onOff ? '' : 'disabled'}>Cold</button>        <button class="device-light-color normal ${device.lightList[0].colorTemperature == 40.2 ? 'active' : 'inactive'}" id="device-${device.instanceId}-color-normal" onclick="operateLight('${device.instanceId}', { onOff: true, color: 'normal' })" ${device.alive && device.lightList[0].onOff ? '' : 'disabled'}>Normal</button>        <button class="device-light-color warm ${device.lightList[0].colorTemperature == 100 ? 'active' : 'inactive'}" id="device-${device.instanceId}-color-warm" onclick="operateLight('${device.instanceId}', { onOff: true, color: 'warm' })" ${device.alive && device.lightList[0].onOff ? '' : 'disabled'}>Warm</button></div></div>` };
// device_remote
const device_remote_component = (device,user) => { return `<div class="device-remote" id="device-${device.instanceId}"><div class="device-remote-name-wrapper">        <h3 class="device-remote-name" id="device-${device.instanceId}-name">${device.name.length == 0 ? device.deviceInfo.modelNumber.length > 0 ? device.deviceInfo.modelNumber : 'Unknown Remote' : device.name.length <= 20 ? device.name : device.name.substring(0, 20 - 3) + '...'}</h5>        <img class="device-remote-name-edit" onclick="updateRemote('${device.instanceId}')" src="../../../assets/edit.png" alt="EDIT" ${user.editingMode ? '' : 'hidden'}>        <img class="device-name-${device.type >= 0 ? 'ikea' : 'shelly'}" src="../../../assets/${device.type >= 0 ? 'ikea' : 'shelly'}-logo.png" alt="${device.type >= 0 ? 'IKEA' : 'SHELLY'} DEVICE"></div><h5 class="device-remote-alive ${device.alive ? 'active' : 'inactive'}" id="device-${device.instanceId}-alive">${device.alive ? 'Active' : 'Inactive'}</h6></div>` };
// device_roller
const device_roller_component = (device) => { return `<div class="device-roller" id="device-${device.id}"><div class="device-roller-name-wrapper">        <h3 class="device-roller-name" id="device-${device.id}-name">${device.name.length <= 20 ? device.name : device.name.substring(0, 20 - 3) + '...'}</h5>        <img class="device-name-${device.type >= 0 ? 'ikea' : 'shelly'}" src="../../../assets/${device.type >= 0 ? 'ikea' : 'shelly'}-logo.png" alt="${device.type >= 0 ? 'IKEA' : 'SHELLY'} DEVICE"></div><div class="device-roller-controll-wrapper">        <button class="device-roller-controll close ${device.state == 'closing' ? 'active' : 'inactive'}" id="device-${device.id}-controll-closing" value="${device.state == 'closing'}" onclick="operateRoller('${device.id}', { action: 'close' })">Close</button>        <button class="device-roller-controll stop ${device.state == 'stopped'  || device.state == 'open' || device.state == 'closed' ? 'active' : 'inactive'}" id="device-${device.id}-controll-stopped" value="${device.state == 'stopped'  || device.state == 'open' || device.state == 'closed'}" onclick="operateRoller('${device.id}', { action: 'stop' })">Stop</button>        <button class="device-roller-controll open ${device.state == 'opening' ? 'active' : 'inactive'}" id="device-${device.id}-controll-opening" value="${device.state == 'opening'}" onclick="operateRoller('${device.id}', { action: 'open' })">Open</button></div><div class="device-roller-position-wrapper">        <input class="device-roller-position" id="device-${device.id}-position" type="range" oninput="document.getElementById('device-${device.id}-position-label').innerHTML = value + '%'" onchange="operateRoller('${device.id}', { action: 'position', position: document.getElementById('device-${device.id}-position').value })" min="0" max="100" value="${device.current_pos}" ${device.state == 'stopped' || device.state == 'open' || device.state == 'closed' ? '' : 'disabled'}>        <label class="device-roller-position-label${device.state == 'stopped' || device.state == 'open' || device.state == 'closed' ? '' : ' disabled'}" id="device-${device.id}-position-label" for="device-${device.id}-position">${device.state != 'stopped' && device.state != 'open' && device.state != 'closed' ? '...' : device.current_pos}%</label></div></div>` };
// group
const group_component = (group) => { return `<div class="group" id="group-${group.instanceId}"><div class="group-info-wrapper">        <h1 class="group-name" id="group-${group.instanceId}-name">${group.name.length <= 15 ? group.name : group.name.substring(0, 15 - 3) + '...'}</h1>        <button class="group-onOff ${group.onOff ? 'on' : 'off'}" id="group-${group.instanceId}-onOff" value="${group.onOff}" onclick="operateGroup('${group.instanceId}', { value: document.getElementById('group-${group.instanceId}-onOff').getAttribute('value') == 'true' ? false : true })">${group.onOff ? 'Turn Off' : 'Turn On'}</button></div><svg class="${group.noChildren ? 'group-open-hidden' : 'group-open'}" id="group-${group.instanceId}-open" onclick="openGroup('${group.instanceId}')" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32"><g data-name="11-Arrow Right"><path d="M25 0H7a7 7 0 0 0-7 7v18a7 7 0 0 0 7 7h18a7 7 0 0 0 7-7V7a7 7 0 0 0-7-7zm5 25a5 5 0 0 1-5 5H7a5 5 0 0 1-5-5V7a5 5 0 0 1 5-5h18a5 5 0 0 1 5 5z"/><path d="m19.71 8.29-1.42 1.42 5.3 5.29H5v2h18.59l-5.29 5.29 1.41 1.41 7-7a1 1 0 0 0 0-1.41z"/></g></svg></div>` };
// group_title
const group_title_component = (group,devices) => { return `<div class="group-title" id="group-title-${group.instanceId}"><div class="group-title-name-wrapper">        <h2 class="group-title-name" id="group-title-${group.instanceId}-name">${group.name.length <= 20 ? group.name : group.name.substring(0, 20 - 3) + '...'}</h2>        <img class="group-title-close" src="../../../assets/close-circle.png" alt="Close Group" onclick="closeGroup()" id="group-title-${group.instanceId}-close"></div>    ${devices.join('')}</div>` };
// group_title_unassignedDevices
const group_title_unassignedDevices_component = (devices) => { return `<div class="group-title"><div class="group-title-name-wrapper">        <h2 class="group-title-name" style="font-size: 22.5px; font-weight: 500;">Unassigned Devices</h2>        <img class="group-title-close" src="../../../assets/close-circle.png" alt="Close Group" onclick="closeGroup()"></div>    ${devices.join('')}</div>` };
// group_unassignedDevices
const group_unassignedDevices_component = () => { return `<div class="group">
    <div class="group-info-wrapper">
        <h1 class="group-name">Unassigned Devices</h1>
    </div>
    <svg class="group-open" onclick="openGroup('000000')" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32"><g data-name="11-Arrow Right"><path d="M25 0H7a7 7 0 0 0-7 7v18a7 7 0 0 0 7 7h18a7 7 0 0 0 7-7V7a7 7 0 0 0-7-7zm5 25a5 5 0 0 1-5 5H7a5 5 0 0 1-5-5V7a5 5 0 0 1 5-5h18a5 5 0 0 1 5 5z"/><path d="m19.71 8.29-1.42 1.42 5.3 5.29H5v2h18.59l-5.29 5.29 1.41 1.41 7-7a1 1 0 0 0 0-1.41z"/></g></svg>
</div>` };
